clear all; clc;
N = 1000; SNR_dB = 10; M = 4; loop_bandwidth = 0.01; true_phase = pi/3;

tx_symbols = exp(1j * (2 * pi * (0:M-1) / M));
tx_data = randi([0 M-1], N, 1);
tx_signal = tx_symbols(tx_data + 1);

noise = (1/sqrt(2*10^(SNR_dB/10))) * (randn(N, 1) + 1j * randn(N, 1));
rx_signal = tx_signal .* exp(1j * true_phase) + noise;

estimated_phase_ml = angle(sum(conj(tx_signal) .* rx_signal));

phase_error_pll = zeros(N, 1);
estimated_phase_pll = zeros(N, 1);
current_phase_estimate_pll = 0;

for n = 1:N
    phase_error_pll(n) = angle(rx_signal(n) * exp(-1j * current_phase_estimate_pll));
    current_phase_estimate_pll = current_phase_estimate_pll + loop_bandwidth * phase_error_pll(n);
    estimated_phase_pll(n) = current_phase_estimate_pll;
end

corrected_rx_signal = rx_signal .* exp(-1j * estimated_phase_pll);

figure; 
subplot(2, 1, 1); scatter(real(rx_signal), imag(rx_signal), 'filled'); title('Received Signal Constellation Diagram'); xlabel('In-Phase'); ylabel('Quadrature'); axis equal;
subplot(2, 1, 2); scatter(real(corrected_rx_signal), imag(corrected_rx_signal), 'filled'); title('Corrected Signal Constellation Diagram'); xlabel('In-Phase'); ylabel('Quadrature'); axis equal;

SNR_dB_range = 0:2:20;
phase_error_variance = zeros(length(SNR_dB_range), 1);

for idx = 1:length(SNR_dB_range)
    SNR_dB = SNR_dB_range(idx);
    noise_variance = 1/(2*10^(SNR_dB/10));
    noise = sqrt(noise_variance) * (randn(N, 1) + 1j * randn(N, 1));
    
    rx_signal = exp(1j * true_phase) + noise;
    
    estimated_phase = angle(sum(rx_signal));
    
    phase_error_variance(idx) = var(angle(rx_signal) - true_phase);
end

figure; plot(SNR_dB_range, phase_error_variance); title('Effect of Noise on Phase Estimation'); xlabel('SNR (dB)'); ylabel('Phase Error Variance'); 

phase_error_dd = zeros(N, 1);
phase_error_ndd = zeros(N, 1);
estimated_phase_dd = zeros(N, 1);
estimated_phase_ndd = zeros(N, 1);

current_phase_estimate_dd = 0;
current_phase_estimate_ndd = 0;

for n = 1:N
    noise = (1/sqrt(2*10^(SNR_dB))) * (randn + 1j * randn);
    rx_signal = tx_signal(n) * exp(1j * true_phase) + noise;

    detected_symbol = exp(1j * round(angle(rx_signal) * M / (2 * pi)) * 2 * pi / M);
    phase_error_dd(n) = angle(detected_symbol * exp(-1j * current_phase_estimate_dd));
    current_phase_estimate_dd = current_phase_estimate_dd + loop_bandwidth * phase_error_dd(n);
    estimated_phase_dd(n) = current_phase_estimate_dd;

    phase_error_ndd(n) = angle(rx_signal * exp(-1j * current_phase_estimate_ndd));
    current_phase_estimate_ndd = current_phase_estimate_ndd + loop_bandwidth * phase_error_ndd(n);
    estimated_phase_ndd(n) = current_phase_estimate_ndd;
end

figure;
subplot(2, 1, 1); plot(1:N, estimated_phase_dd); title('Decision-Directed Phase Estimate'); xlabel('Samples'); ylabel('Estimated Phase (radians)');
subplot(2, 1, 2); plot(1:N, estimated_phase_ndd); title('Non-Decision-Directed Phase Estimate'); xlabel('Samples'); ylabel('Estimated Phase (radians)');

